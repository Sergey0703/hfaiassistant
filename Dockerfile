# Dockerfile –¥–ª—è HuggingFace Spaces - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø –î–õ–Ø REACT SPA
# Multi-stage build: Node.js –¥–ª—è React + Python –¥–ª—è FastAPI + –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Ä–∞–∑–¥–∞—á–∞ —Å—Ç–∞—Ç–∏–∫–∏

# ====================================
# STAGE 1: –°–ë–û–†–ö–ê REACT –§–†–û–ù–¢–ï–ù–î–ê
# ====================================
FROM node:18-alpine AS react-builder

WORKDIR /app/frontend

# –ö–æ–ø–∏—Ä—É–µ–º package.json –∏ package-lock.json
COPY frontend/package*.json ./

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –í–°–ï –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ (–≤–∫–ª—é—á–∞—è devDependencies –¥–ª—è —Å–±–æ—Ä–∫–∏)
RUN npm ci

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∏–ø—ã –¥–ª—è TypeScript –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
RUN npm install --save-dev @types/react @types/react-dom @types/node typescript || true

# –ö–æ–ø–∏—Ä—É–µ–º –∏—Å—Ö–æ–¥–Ω–∏–∫–∏ React
COPY frontend/ ./

# –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ public/index.html —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
RUN test -f public/index.html || \
    (echo "–°–æ–∑–¥–∞–µ–º public/index.html..." && \
    mkdir -p public && \
    cat > public/index.html << 'EOF'
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href="%PUBLIC_URL%/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="theme-color" content="#000000" />
    <meta name="description" content="Legal Assistant - AI-powered legal consultation" />
    <title>Legal Assistant</title>
  </head>
  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id="root"></div>
  </body>
</html>
EOF
    )

# –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º package.json
RUN if ! grep -q '"build":' package.json; then \
    echo "–î–æ–±–∞–≤–ª—è–µ–º build —Å–∫—Ä–∏–ø—Ç –≤ package.json..." && \
    npm pkg set scripts.build="react-scripts build"; \
    fi

# –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º react-scripts –µ—Å–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
RUN npm list react-scripts || npm install --save-dev react-scripts

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è TypeScript –ø—Ä–æ–≤–µ—Ä–æ–∫ (–µ—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã)
ENV SKIP_PREFLIGHT_CHECK=true
ENV TSC_COMPILE_ON_ERROR=true
ENV DISABLE_ESLINT_PLUGIN=true

# –°–æ–±–∏—Ä–∞–µ–º –ø—Ä–æ–¥—É–∫—Ü–∏—é React
RUN npm run build

# –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–ë–û–†–ö–ò REACT
RUN echo "üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ React build:" && \
    ls -la build/ && \
    echo "üìÅ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ build/:" && \
    find build/ -type f -name "*.html" -o -name "*.js" -o -name "*.css" | head -20 && \
    echo "üîç –ü–æ–∏—Å–∫ index.html:" && \
    find . -name "index.html" -type f && \
    echo "üìä –†–∞–∑–º–µ—Ä—ã –∫–ª—é—á–µ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤:" && \
    (ls -lh build/index.html || echo "‚ùå index.html –ù–ï –ù–ê–ô–î–ï–ù!") && \
    (ls -lh build/static/js/*.js | head -3 || echo "‚ö†Ô∏è JS —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã") && \
    (ls -lh build/static/css/*.css | head -3 || echo "‚ö†Ô∏è CSS —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")

# –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü—Ä–æ–≤–µ—Ä—è–µ–º package.json –∏ —Å–æ–∑–¥–∞–µ–º index.html –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
RUN if [ ! -f build/index.html ]; then \
    echo "‚ùå index.html –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç! –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π..." && \
    mkdir -p build && \
    cat > build/index.html << 'EOF'
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href="/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="theme-color" content="#000000" />
    <meta name="description" content="Legal Assistant - AI-powered legal consultation" />
    <link href="/static/css/main.css" rel="stylesheet">
    <title>Legal Assistant</title>
  </head>
  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id="root"></div>
    <script src="/static/js/main.js"></script>
  </body>
</html>
EOF
    fi

# –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–í–ï–†–ö–ê: –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ –≤—Å–µ —Ñ–∞–π–ª—ã —Å–æ–∑–¥–∞–Ω—ã
RUN test -f build/index.html || (echo "üí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: index.html –Ω–µ —Å–æ–∑–¥–∞–Ω!" && exit 1) && \
    test -d build/static || (echo "üí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: static/ –Ω–µ —Å–æ–∑–¥–∞–Ω!" && exit 1) && \
    echo "‚úÖ React build –ø—Ä–æ—à–µ–ª –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏"

# ====================================
# STAGE 2: PYTHON BACKEND + REACT BUILD
# ====================================
FROM python:3.11-slim

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/*

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è HuggingFace Spaces
RUN useradd -m -u 1000 user
USER user
ENV HOME=/home/user \
    PATH=/home/user/.local/bin:$PATH

# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞–±–æ—á–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
WORKDIR $HOME/app

# –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º—ã—Ö –≤–µ—Ä—Å–∏–π PyTorch
RUN pip install --user --no-cache-dir \
    torch==2.1.0 \
    torchvision==0.16.0 \
    torchaudio==2.1.0 \
    --index-url https://download.pytorch.org/whl/cpu

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º sentence-transformers —Å —Å–æ–≤–º–µ—Å—Ç–∏–º–æ–π –≤–µ—Ä—Å–∏–µ–π
RUN pip install --user --no-cache-dir sentence-transformers==2.7.0

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ requirements –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
COPY --chown=user requirements.txt .

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ü–û–°–õ–ï PyTorch
RUN pip install --user --no-cache-dir -r requirements.txt

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ sentence-transformers —Ä–∞–±–æ—Ç–∞–µ—Ç
RUN python -c "import sentence_transformers; print('‚úÖ sentence-transformers OK')"

# ====================================
# –ö–û–ü–ò–†–û–í–ê–ù–ò–ï –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø
# ====================================

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞ –±—ç–∫–µ–Ω–¥–∞
COPY --chown=user backend/ .

# –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—Ä–∞–Ω–Ω–æ–≥–æ React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏–∑ –ø–µ—Ä–≤–æ–≥–æ stage
# –ù–ê –ü–†–ê–í–ò–õ–¨–ù–´–ô –ü–£–¢–¨ –î–õ–Ø HUGGINGFACE SPACES
COPY --from=react-builder --chown=user /app/frontend/build ./static

# –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–û: —Ç–∞–∫–∂–µ –∫–æ–ø–∏—Ä—É–µ–º –≤ frontend/build –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å main.py
COPY --from=react-builder --chown=user /app/frontend/build ./frontend/build

# –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ö–û–ü–ò–†–û–í–ê–ù–ò–Ø
RUN echo "üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö React —Ñ–∞–π–ª–æ–≤:" && \
    echo "üìÅ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ ./static/:" && \
    ls -la static/ && \
    echo "üìÅ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ ./frontend/build/:" && \
    ls -la frontend/build/ && \
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ index.html –≤ –æ–±–µ–∏—Ö –ª–æ–∫–∞—Ü–∏—è—Ö:" && \
    (ls -lh static/index.html || echo "‚ùå static/index.html –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç") && \
    (ls -lh frontend/build/index.html || echo "‚ùå frontend/build/index.html –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç") && \
    echo "‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

# –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ index.html –µ—Å—Ç—å –≤ –æ–±–µ–∏—Ö –ª–æ–∫–∞—Ü–∏—è—Ö
RUN if [ ! -f static/index.html ] && [ -f frontend/build/index.html ]; then \
    echo "–ö–æ–ø–∏—Ä—É–µ–º index.html –≤ static/" && \
    cp frontend/build/index.html static/; \
    fi && \
    if [ ! -f frontend/build/index.html ] && [ -f static/index.html ]; then \
    echo "–ö–æ–ø–∏—Ä—É–µ–º index.html –≤ frontend/build/" && \
    mkdir -p frontend/build && \
    cp static/index.html frontend/build/; \
    fi

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏
RUN mkdir -p logs simple_db chromadb_data uploads temp backups .cache

# ====================================
# –ù–ê–°–¢–†–û–ô–ö–ê –ü–ï–†–ï–ú–ï–ù–ù–´–• –û–ö–†–£–ñ–ï–ù–ò–Ø
# ====================================
ENV PYTHONPATH=$HOME/app
ENV PYTHONUNBUFFERED=1
ENV LOG_LEVEL=INFO
ENV USE_CHROMADB=true
ENV LLM_DEMO_MODE=false
ENV CORS_ORIGINS=["*"]

# HuggingFace Spaces specific settings
ENV HF_SPACES=true
ENV TRANSFORMERS_CACHE=$HOME/app/.cache
ENV HF_HOME=$HOME/app/.cache
ENV TORCH_HOME=$HOME/app/.cache

# React frontend settings - –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ï –ü–£–¢–ò
ENV REACT_BUILD_PATH=$HOME/app/static
ENV SERVE_REACT=true

# –ü–æ—Ä—Ç –¥–ª—è HuggingFace Spaces (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ 7860)
EXPOSE 7860

# ====================================
# HEALTHCHECK –î–õ–Ø DOCKER
# ====================================
HEALTHCHECK --interval=30s --timeout=30s --start-period=120s --retries=3 \
    CMD curl -f http://localhost:7860/health || exit 1

# ====================================
# –ö–û–ú–ê–ù–î–ê –ó–ê–ü–£–°–ö–ê
# ====================================
# –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π timeout –¥–ª—è React + FastAPI
CMD ["python", "-m", "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "7860", "--workers", "1", "--timeout-keep-alive", "65"]